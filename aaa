
entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !11, metadata !12), !dbg !13
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !14, metadata !12), !dbg !15
  %add = add nsw i32 %a, %b, !dbg !16
  ret i32 %add, !dbg !17

	in : 
	out :  
Pointer is:
0x259f990  %add = add nsw i32 %a, %b, !dbg !16

Values are:

overover


entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !15, metadata !16), !dbg !17
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !18, metadata !16), !dbg !19
  call void @llvm.dbg.value(metadata i32 (i32, i32)** %a_fptr, i64 0, metadata !20, metadata !16), !dbg !21
  %arrayidx = getelementptr inbounds i32 (i32, i32)*, i32 (i32, i32)** %a_fptr, i64 2, !dbg !22
  %0 = load i32 (i32, i32)*, i32 (i32, i32)** %arrayidx, align 8, !dbg !22
  %call = call i32 %0(i32 %a, i32 %b), !dbg !22
  ret i32 %call, !dbg !23

	in : 
	out :  
Pointer is:
0x25a17b0i32 (i32, i32)** %a_fptr

Values are:

overover

Pointer is:
0x25a2b50  %arrayidx = getelementptr inbounds i32 (i32, i32)*, i32 (i32, i32)** %a_fptr, i64 2, !dbg !22

Values are:
0x25a17b0i32 (i32, i32)** %a_fptr 
overover

Pointer is:
0x25a2bb8  %0 = load i32 (i32, i32)*, i32 (i32, i32)** %arrayidx, align 8, !dbg !22

Values are:

overover

Pointer is:
0x25a2d68  %call = call i32 %0(i32 %a, i32 %b), !dbg !22

Values are:

overover


entry:
  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16
  call void @llvm.dbg.value(metadata i8 %x, i64 0, metadata !12, metadata !13), !dbg !14
  call void @llvm.dbg.value(metadata i32 %op1, i64 0, metadata !15, metadata !13), !dbg !16
  call void @llvm.dbg.value(metadata i32 %op2, i64 0, metadata !17, metadata !13), !dbg !18
  call void @llvm.dbg.value(metadata i32 (i32, i32)* @plus, i64 0, metadata !19, metadata !13), !dbg !23
  call void @llvm.dbg.value(metadata i32 (i32, i32)* @minus, i64 0, metadata !24, metadata !13), !dbg !25
  call void @llvm.dbg.declare(metadata [3 x i32 (i32, i32)*]* %t_fptr, metadata !26, metadata !13), !dbg !30
  %0 = bitcast [3 x i32 (i32, i32)*]* %t_fptr to i8*, !dbg !30
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 24, i32 16, i1 false), !dbg !30
  %conv = sext i8 %x to i32, !dbg !31
  %cmp = icmp eq i32 %conv, 43, !dbg !33
  br i1 %cmp, label %if.then, label %if.else, !dbg !34

	in : 
	out :  

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i64 0, i64 2, !dbg !35
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %arrayidx, align 16, !dbg !37
  br label %if.end7, !dbg !38

	in : 
	out :  
Pointer is:
0x259fb68  %arrayidx = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i64 0, i64 2, !dbg !35

Values are:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16 
overover

Pointer is:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16

Values are:
0x25969c8
; Function Attrs: noinline nounwind uwtable
define i32 @plus(i32 %a, i32 %b) #0 !dbg !7 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !11, metadata !12), !dbg !13
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !14, metadata !12), !dbg !15
  %add = add nsw i32 %a, %b, !dbg !16
  ret i32 %add, !dbg !17
}
 
overover


if.else:                                          ; preds = %entry
  %conv2 = sext i8 %x to i32, !dbg !39
  %cmp3 = icmp eq i32 %conv2, 45, !dbg !41
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !42

	in : 
	out :  

if.then5:                                         ; preds = %if.else
  %arrayidx6 = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i64 0, i64 2, !dbg !43
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %arrayidx6, align 16, !dbg !45
  br label %if.end, !dbg !46

	in : 
	out :  
Pointer is:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16

Values are:
0x2598508
; Function Attrs: noinline nounwind uwtable
define i32 @minus(i32 %a, i32 %b) #0 !dbg !18 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !19, metadata !12), !dbg !20
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !21, metadata !12), !dbg !22
  %sub = sub nsw i32 %a, %b, !dbg !23
  ret i32 %sub, !dbg !24
}
 
overover

Pointer is:
0x25a5b88  %arrayidx6 = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i64 0, i64 2, !dbg !43

Values are:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16 
overover


if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end7

	in : 
Pointer is:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16

Values are:
0x2598508
; Function Attrs: noinline nounwind uwtable
define i32 @minus(i32 %a, i32 %b) #0 !dbg !18 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !19, metadata !12), !dbg !20
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !21, metadata !12), !dbg !22
  %sub = sub nsw i32 %a, %b, !dbg !23
  ret i32 %sub, !dbg !24
}
 
overover

Pointer is:
0x25a5b88  %arrayidx6 = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i64 0, i64 2, !dbg !43

Values are:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16 
overover

	out :  
Pointer is:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16

Values are:
0x2598508
; Function Attrs: noinline nounwind uwtable
define i32 @minus(i32 %a, i32 %b) #0 !dbg !18 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !19, metadata !12), !dbg !20
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !21, metadata !12), !dbg !22
  %sub = sub nsw i32 %a, %b, !dbg !23
  ret i32 %sub, !dbg !24
}
 
overover

Pointer is:
0x25a5b88  %arrayidx6 = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i64 0, i64 2, !dbg !43

Values are:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16 
overover


if.end7:                                          ; preds = %if.end, %if.then
  %arraydecay = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i32 0, i32 0, !dbg !47
  %call = call i32 @clever(i32 %op1, i32 %op2, i32 (i32, i32)** %arraydecay), !dbg !48
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !49, metadata !13), !dbg !51
  ret i32 0, !dbg !52

	in : 
Pointer is:
0x259fb68  %arrayidx = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i64 0, i64 2, !dbg !35

Values are:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16 
overover

Pointer is:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16

Values are:
0x25969c8
; Function Attrs: noinline nounwind uwtable
define i32 @plus(i32 %a, i32 %b) #0 !dbg !7 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !11, metadata !12), !dbg !13
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !14, metadata !12), !dbg !15
  %add = add nsw i32 %a, %b, !dbg !16
  ret i32 %add, !dbg !17
}
 0x2598508
; Function Attrs: noinline nounwind uwtable
define i32 @minus(i32 %a, i32 %b) #0 !dbg !18 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !19, metadata !12), !dbg !20
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !21, metadata !12), !dbg !22
  %sub = sub nsw i32 %a, %b, !dbg !23
  ret i32 %sub, !dbg !24
}
 
overover

Pointer is:
0x25a5b88  %arrayidx6 = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i64 0, i64 2, !dbg !43

Values are:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16 
overover

	out :  
Pointer is:
0x259fb68  %arrayidx = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i64 0, i64 2, !dbg !35

Values are:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16 
overover

Pointer is:
0x25a3088i32 %op1

Values are:

overover

Pointer is:
0x25a30b0i32 %op2

Values are:

overover

Pointer is:
0x25a3420i32 0

Values are:

overover

Pointer is:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16

Values are:
0x25969c8
; Function Attrs: noinline nounwind uwtable
define i32 @plus(i32 %a, i32 %b) #0 !dbg !7 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !11, metadata !12), !dbg !13
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !14, metadata !12), !dbg !15
  %add = add nsw i32 %a, %b, !dbg !16
  ret i32 %add, !dbg !17
}
 0x2598508
; Function Attrs: noinline nounwind uwtable
define i32 @minus(i32 %a, i32 %b) #0 !dbg !18 {
entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !19, metadata !12), !dbg !20
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !21, metadata !12), !dbg !22
  %sub = sub nsw i32 %a, %b, !dbg !23
  ret i32 %sub, !dbg !24
}
 
overover

Pointer is:
0x25a5b88  %arrayidx6 = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i64 0, i64 2, !dbg !43

Values are:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16 
overover

Pointer is:
0x25a6058  %arraydecay = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i32 0, i32 0, !dbg !47

Values are:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16 
overover

Pointer is:
0x25a6140  %call = call i32 @clever(i32 %op1, i32 %op2, i32 (i32, i32)** %arraydecay), !dbg !48

Values are:

overover


entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !15, metadata !16), !dbg !17
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !18, metadata !16), !dbg !19
  call void @llvm.dbg.value(metadata i32 (i32, i32)** %a_fptr, i64 0, metadata !20, metadata !16), !dbg !21
  %arrayidx = getelementptr inbounds i32 (i32, i32)*, i32 (i32, i32)** %a_fptr, i64 2, !dbg !22
  %0 = load i32 (i32, i32)*, i32 (i32, i32)** %arrayidx, align 8, !dbg !22
  %call = call i32 %0(i32 %a, i32 %b), !dbg !22
  ret i32 %call, !dbg !23

	in : 
Pointer is:
0x25a1760i32 %a

Values are:

overover

Pointer is:
0x25a1788i32 %b

Values are:

overover

Pointer is:
0x25a17b0i32 (i32, i32)** %a_fptr

Values are:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16 0x25a6058  %arraydecay = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i32 0, i32 0, !dbg !47 
overover

Pointer is:
0x25a2d68  %call = call i32 %0(i32 %a, i32 %b), !dbg !22

Values are:

overover

	out :  
Pointer is:
0x25a1760i32 %a

Values are:

overover

Pointer is:
0x25a1788i32 %b

Values are:

overover

Pointer is:
0x25a17b0i32 (i32, i32)** %a_fptr

Values are:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16 0x25a6058  %arraydecay = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i32 0, i32 0, !dbg !47 
overover

Pointer is:
0x25a2b50  %arrayidx = getelementptr inbounds i32 (i32, i32)*, i32 (i32, i32)** %a_fptr, i64 2, !dbg !22

Values are:
0x25a17b0i32 (i32, i32)** %a_fptr 
overover

Pointer is:
0x25a2bb8  %0 = load i32 (i32, i32)*, i32 (i32, i32)** %arrayidx, align 8, !dbg !22

Values are:
0x25a3648  %t_fptr = alloca [3 x i32 (i32, i32)*], align 16 0x25a6058  %arraydecay = getelementptr inbounds [3 x i32 (i32, i32)*], [3 x i32 (i32, i32)*]* %t_fptr, i32 0, i32 0, !dbg !47 
overover

Pointer is:
0x25a2d68  %call = call i32 %0(i32 %a, i32 %b), !dbg !22

Values are:

overover


entry:
  call void @llvm.dbg.value(metadata i32 %a, i64 0, metadata !11, metadata !12), !dbg !13
  call void @llvm.dbg.value(metadata i32 %b, i64 0, metadata !14, metadata !12), !dbg !15
  %sub = sub nsw i32 %a, %b, !dbg !16
  ret i32 %sub, !dbg !17

	in : 
	out :  
Pointer is:
0x25a14f0  %sub = sub nsw i32 %a, %b, !dbg !16

Values are:

overover

31: clever
15: 
